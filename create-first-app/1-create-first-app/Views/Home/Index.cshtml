@model FirstAzureSearch.Models.SearchData
@{
    ViewData["Title"] = "Home Page";
}
<head>
    <style>
        textarea.box1 {
            width: 648px;
            height: 30px;
            border: none;
            background-color: azure;
            font-size: 14pt;
            color: blue;
            padding-left: 5px;
        }

        textarea.box2 {
            width: 648px;
            height: 100px;
            border: none;
            background-color: azure;
            font-size: 12pt;
            padding-left: 5px;
            margin-bottom: 24px;
        }

        .sampleTitle {
            font: 32px/normal 'Segoe UI Light',Arial,Helvetica,Sans-Serif;
            margin: 20px 0;
            font-size: 32px;
            text-align: left;
        }

        .sampleText {
            font: 16px/bold 'Segoe UI Light',Arial,Helvetica,Sans-Serif;
            margin: 20px 0;
            font-size: 14px;
            text-align: left;
            height: 30px;
        }

        .searchBoxForm {
            width: 648px;
            box-shadow: 0 0 0 1px rgba(0,0,0,.1), 0 2px 4px 0 rgba(0,0,0,.16);
            background-color: #fff;
            display: inline-block;
            border-collapse: collapse;
            border-spacing: 0;
            list-style: none;
            color: #666;
        }

        .searchBox {
            width: 568px;
            font-size: 16px;
            margin: 5px 0 1px 20px;
            padding: 0 10px 0 0;
            border: 0;
            max-height: 30px;
            outline: none;
            box-sizing: content-box;
            height: 35px;
            vertical-align: top;
        }

        .searchBoxSubmit {
            background-color: #fff;
            border-color: #fff;
            background-image: url(/images/search.png);
            background-repeat: no-repeat;
            height: 20px;
            width: 20px;
            text-indent: -99em;
            border-width: 0;
            border-style: solid;
            margin: 10px;
            outline: 0;
        }

        .pageButton {
            border: none;
            color: darkblue;
            font-weight: normal;
            width: 50px;
        }

        .pageButtonDisabled {
            border: none;
            color: lightgray;
            font-weight: bold;
            width: 50px;
        }
    </style>
</head>
<body>
    <h1 class="sampleTitle">
        <img src="~/images/azure-logo.png" width="80" />
        Hotels demo app
    </h1>

    @using (Html.BeginForm("Index", "Home", FormMethod.Post))
    {
        // Display the search text box, with the search icon to the right of it.
        <div class="searchBoxForm">
            @Html.TextBoxFor(m => m.searchText, new { @class = "searchBox" }) <input class="searchBoxSubmit" type="submit" value="">
        </div>

        @if (Model != null)
        {
            // Show the result count.
            <p class="sampleText">
                @Html.DisplayFor(m => m.resultCount) Results
            </p>

            // Show the hotel data. All pages will have ResultsPerPage entries, except for the last page.
            @for (var i = 0; i < Model.hotels.Count; i++)
            {
                // Display the hotel name.
                @Html.TextAreaFor(m => Model.GetHotel(i).HotelName, new { @class = "box1" })

                // Display the hotel sample room and description.
                @Html.TextArea("desc", Model.GetFullHotelDescription(i), new { @class = "box2" })
            }
        }
    }

    @if (Model != null && Model.pageCount > 1)
    {
        // If there is more than one page of results, show the paging buttons.
        <table>
            <tr>
                <td>
                    @using (Html.BeginForm("Prev", "Home", FormMethod.Post))
                    {
                        // Previous (<<) page button.
                        @if (Model.currentPage > 0)
                        {
                            <input id="prev" type="submit" value="&#171;" class="pageButton">
                        }
                        else
                        {
                            // Show an inactive button, so the buttons remain in the same place on the view.
                            <input id="prev" type="submit" value="&#171;" disabled class="pageButtonDisabled">
                        }

                    }
                </td>

                <!-- Aid navigation by showing the current page and how many pages of results there are. -->
                <td>&nbsp;&nbsp;Page @(Model.currentPage + 1) of @Model.pageCount&nbsp;&nbsp;</td>
                <td>
                    @using (Html.BeginForm("Next", "Home", FormMethod.Post))
                    {
                        // Next (>>) page button.
                        @if (Model.currentPage < Model.pageCount - 1)
                        {
                            <input id="next" type="submit" value="&#187;" class="pageButton">
                        }
                        else
                        {
                            <input id="next" type="submit" value="&#187;" disabled class="pageButtonDisabled">
                        }
                    }
                </td>
            </tr>
        </table>
    }
</body>